/*
Deployment script for ECodeWorld

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ECodeWorld"
:setvar DefaultFilePrefix "ECodeWorld"
:setvar DefaultDataPath "D:\MSSQL\Data\"
:setvar DefaultLogPath "E:\MSSQL\Logs\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
/*
The column ID on table [dbo].[Authors] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Authors])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Comments].[AuthorID] is being dropped, data loss could occur.

The column [dbo].[Comments].[LikeCount] is being dropped, data loss could occur.

The column [dbo].[Comments].[PostID] is being dropped, data loss could occur.

The column ID on table [dbo].[Comments] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Comments])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Posts].[ArticleContent] is being dropped, data loss could occur.

The column [dbo].[Posts].[ArticleTitle] is being dropped, data loss could occur.

The column [dbo].[Posts].[CommentCount] is being dropped, data loss could occur.

The column [dbo].[Posts].[LikeCount] is being dropped, data loss could occur.

The column [dbo].[Posts].[PostDate] is being dropped, data loss could occur.

The column [dbo].[Posts].[PostHasArticle] is being dropped, data loss could occur.

The column [dbo].[Posts].[Type] is being dropped, data loss could occur.

The column ID on table [dbo].[Posts] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Posts])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[Authors]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Authors] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (255) NULL,
    [Avatar]      VARCHAR (255) NULL,
    [Description] VARCHAR (255) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Authors1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Authors])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Authors] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Authors] ([ID], [Name], [Avatar], [Description])
        SELECT   [ID],
                 [Name],
                 [Avatar],
                 [Description]
        FROM     [dbo].[Authors]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Authors] OFF;
    END

DROP TABLE [dbo].[Authors];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Authors]', N'Authors';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Authors1]', N'PK_Authors', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Comments]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Comments] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Count]       INT           NULL,
    [AuthorIP]    VARCHAR (100) NULL,
    [Date]        DATETIME      NULL,
    [Content]     VARCHAR (100) NULL,
    [Approved]    BIT           NULL,
    [LikeCounts]  INT           NULL,
    [AuthorEmail] VARCHAR (255) NULL,
    [AuthorsID]   INT           NULL,
    [PostsID]     INT           NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Comments1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Comments])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Comments] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Comments] ([ID], [Count], [AuthorIP], [Date], [Content], [Approved], [AuthorEmail])
        SELECT   [ID],
                 [Count],
                 [AuthorIP],
                 [Date],
                 [Content],
                 [Approved],
                 [AuthorEmail]
        FROM     [dbo].[Comments]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Comments] OFF;
    END

DROP TABLE [dbo].[Comments];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Comments]', N'Comments';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Comments1]', N'PK_Comments', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Posts]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Posts] (
    [ID]            INT            IDENTITY (1, 1) NOT NULL,
    [Title]         VARCHAR (255)  NULL,
    [Description]   VARCHAR (500)  NULL,
    [Keywords]      VARCHAR (500)  NULL,
    [Content]       NVARCHAR (MAX) NULL,
    [Status]        INT            NULL,
    [LikeCounts]    INT            NULL,
    [CommentCounts] INT            NULL,
    [Date]          DATE           NULL,
    [PostTypesID]   INT            NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Posts1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Posts])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Posts] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Posts] ([ID], [Content], [Status])
        SELECT   [ID],
                 [Content],
                 [Status]
        FROM     [dbo].[Posts]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Posts] OFF;
    END

DROP TABLE [dbo].[Posts];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Posts]', N'Posts';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Posts1]', N'PK_Posts', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD [DisplayName] VARCHAR (50) NULL;


GO
PRINT N'Creating [dbo].[Certifications]...';


GO
CREATE TABLE [dbo].[Certifications] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50)  NULL,
    [Description] VARCHAR (500) NULL,
    CONSTRAINT [PK_Certifications] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Cities]...';


GO
CREATE TABLE [dbo].[Cities] (
    [ID]       INT          IDENTITY (1, 1) NOT NULL,
    [Name]     VARCHAR (50) NULL,
    [Code]     VARCHAR (50) NULL,
    [ISOCode]  VARCHAR (50) NULL,
    [StatesID] INT          NULL,
    CONSTRAINT [PK_Cities] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Countries]...';


GO
CREATE TABLE [dbo].[Countries] (
    [ID]      INT          IDENTITY (1, 1) NOT NULL,
    [Name]    CHAR (25)    NULL,
    [Code]    VARCHAR (50) NULL,
    [ISOCode] VARCHAR (50) NULL,
    CONSTRAINT [PK_Countries] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[LikesCounters]...';


GO
CREATE TABLE [dbo].[LikesCounters] (
    [ID]      INT           IDENTITY (1, 1) NOT NULL,
    [Type]    VARCHAR (10)  NULL,
    [LikeIP]  VARCHAR (100) NULL,
    [PostsID] INT           NULL,
    CONSTRAINT [PK_LikesCounter] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PostTypes]...';


GO
CREATE TABLE [dbo].[PostTypes] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Type]        VARCHAR (255) NULL,
    [Description] VARCHAR (255) NULL,
    CONSTRAINT [PK_PostTypes] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Qualifications]...';


GO
CREATE TABLE [dbo].[Qualifications] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50)  NULL,
    [Description] VARCHAR (500) NULL,
    CONSTRAINT [PK_UserEducations] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[States]...';


GO
CREATE TABLE [dbo].[States] (
    [ID]          INT          IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50) NULL,
    [Code]        VARCHAR (50) NULL,
    [ISOCode]     VARCHAR (50) NULL,
    [CountriesID] INT          NULL,
    CONSTRAINT [PK_States] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Universities]...';


GO
CREATE TABLE [dbo].[Universities] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (50)  NULL,
    [Description] VARCHAR (500) NULL,
    CONSTRAINT [PK_Universities] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[UserCertifications]...';


GO
CREATE TABLE [dbo].[UserCertifications] (
    [ID]                INT           IDENTITY (1, 1) NOT NULL,
    [Name]              VARCHAR (150) NULL,
    [UsersID]           INT           NULL,
    [CertificationsID]  INT           NULL,
    [QualificationDate] DATE          NULL,
    [ValidFrom]         DATE          NULL,
    [ValidTo]           DATE          NULL,
    [Order]             INT           NULL,
    CONSTRAINT [PK_UserCertifications] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[UserProfiles]...';


GO
CREATE TABLE [dbo].[UserProfiles] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]   VARCHAR (50)  NULL,
    [LastName]    VARCHAR (50)  NULL,
    [DisplayName] VARCHAR (50)  NULL,
    [Title]       VARCHAR (50)  NULL,
    [Description] VARCHAR (50)  NULL,
    [Keywords]    VARCHAR (50)  NULL,
    [Email]       VARCHAR (50)  NULL,
    [Phone]       VARCHAR (50)  NULL,
    [Mobile]      VARCHAR (50)  NULL,
    [AboutMe]     VARCHAR (500) NULL,
    [Banner]      VARCHAR (500) NULL,
    [Logo]        VARCHAR (500) NULL,
    [Icon]        VARCHAR (500) NULL,
    [Avtar]       VARCHAR (500) NULL,
    [UsersID]     INT           NULL,
    CONSTRAINT [PK_UserProfiles] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[UserQualifications]...';


GO
CREATE TABLE [dbo].[UserQualifications] (
    [ID]                INT           IDENTITY (1, 1) NOT NULL,
    [Name]              VARCHAR (150) NULL,
    [UsersID]           INT           NULL,
    [QualificationsID]  INT           NULL,
    [UniversitiesID]    INT           NULL,
    [QualificationDate] DATE          NULL,
    [Order]             INT           NULL,
    CONSTRAINT [PK_UserQualifications] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[UsersAddress]...';


GO
CREATE TABLE [dbo].[UsersAddress] (
    [ID]         INT           IDENTITY (1, 1) NOT NULL,
    [Address1]   VARCHAR (150) NOT NULL,
    [Address2]   VARCHAR (150) NULL,
    [Address3]   VARCHAR (150) NULL,
    [CityID]     INT           NULL,
    [StateID]    INT           NULL,
    [CountryID]  INT           NULL,
    [PostalCode] INT           NULL,
    [UsersID]    INT           NULL,
    CONSTRAINT [PK_Address] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ZipCodes]...';


GO
CREATE TABLE [dbo].[ZipCodes] (
    [ID]       INT          IDENTITY (1, 1) NOT NULL,
    [Name]     VARCHAR (50) NULL,
    [Code]     VARCHAR (50) NULL,
    [ISOCode]  VARCHAR (50) NULL,
    [CitiesID] INT          NULL,
    CONSTRAINT [PK_ZipCodes] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_CommentsAuthors]...';


GO
ALTER TABLE [dbo].[Comments] WITH NOCHECK
    ADD CONSTRAINT [FK_CommentsAuthors] FOREIGN KEY ([AuthorsID]) REFERENCES [dbo].[Authors] ([ID]);


GO
PRINT N'Creating [dbo].[FK_CommentsPosts]...';


GO
ALTER TABLE [dbo].[Comments] WITH NOCHECK
    ADD CONSTRAINT [FK_CommentsPosts] FOREIGN KEY ([PostsID]) REFERENCES [dbo].[Posts] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PostsPostTypes]...';


GO
ALTER TABLE [dbo].[Posts] WITH NOCHECK
    ADD CONSTRAINT [FK_PostsPostTypes] FOREIGN KEY ([PostTypesID]) REFERENCES [dbo].[PostTypes] ([ID]);


GO
PRINT N'Creating [dbo].[FK_CitiesStates]...';


GO
ALTER TABLE [dbo].[Cities] WITH NOCHECK
    ADD CONSTRAINT [FK_CitiesStates] FOREIGN KEY ([StatesID]) REFERENCES [dbo].[States] ([ID]);


GO
PRINT N'Creating [dbo].[FK_LikesCountersPosts]...';


GO
ALTER TABLE [dbo].[LikesCounters] WITH NOCHECK
    ADD CONSTRAINT [FK_LikesCountersPosts] FOREIGN KEY ([PostsID]) REFERENCES [dbo].[Posts] ([ID]);


GO
PRINT N'Creating [dbo].[FK_StatesCountries]...';


GO
ALTER TABLE [dbo].[States] WITH NOCHECK
    ADD CONSTRAINT [FK_StatesCountries] FOREIGN KEY ([CountriesID]) REFERENCES [dbo].[Countries] ([ID]);


GO
PRINT N'Creating [dbo].[FK_UsersCertifications]...';


GO
ALTER TABLE [dbo].[UserCertifications] WITH NOCHECK
    ADD CONSTRAINT [FK_UsersCertifications] FOREIGN KEY ([UsersID]) REFERENCES [dbo].[Users] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Certifications]...';


GO
ALTER TABLE [dbo].[UserCertifications] WITH NOCHECK
    ADD CONSTRAINT [FK_Certifications] FOREIGN KEY ([CertificationsID]) REFERENCES [dbo].[Certifications] ([ID]);


GO
PRINT N'Creating [dbo].[FK_UserUsersProfiles]...';


GO
ALTER TABLE [dbo].[UserProfiles] WITH NOCHECK
    ADD CONSTRAINT [FK_UserUsersProfiles] FOREIGN KEY ([UsersID]) REFERENCES [dbo].[Users] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Users]...';


GO
ALTER TABLE [dbo].[UserQualifications] WITH NOCHECK
    ADD CONSTRAINT [FK_Users] FOREIGN KEY ([UsersID]) REFERENCES [dbo].[Users] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Qualifications]...';


GO
ALTER TABLE [dbo].[UserQualifications] WITH NOCHECK
    ADD CONSTRAINT [FK_Qualifications] FOREIGN KEY ([QualificationsID]) REFERENCES [dbo].[Qualifications] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Universities]...';


GO
ALTER TABLE [dbo].[UserQualifications] WITH NOCHECK
    ADD CONSTRAINT [FK_Universities] FOREIGN KEY ([UniversitiesID]) REFERENCES [dbo].[Universities] ([ID]);


GO
PRINT N'Creating [dbo].[FK_UsersAddress]...';


GO
ALTER TABLE [dbo].[UsersAddress] WITH NOCHECK
    ADD CONSTRAINT [FK_UsersAddress] FOREIGN KEY ([UsersID]) REFERENCES [dbo].[Users] ([ID]);


GO
PRINT N'Creating [dbo].[FK_ZipCodesCities]...';


GO
ALTER TABLE [dbo].[ZipCodes] WITH NOCHECK
    ADD CONSTRAINT [FK_ZipCodesCities] FOREIGN KEY ([CitiesID]) REFERENCES [dbo].[Cities] ([ID]);


GO
PRINT N'Refreshing [dbo].[SPCreateLogins]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[SPCreateLogins]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
/****** Object:  Table [dbo].[Users]    Script Date: 09/17/2018 16:06:41 ******/
SET IDENTITY_INSERT [dbo].[Users] ON
INSERT [dbo].[Users] ([ID], [FirstName], [LastName], [UserName]) VALUES (1, N'Dinesh', N'Kushwaha', N'2kush.dinesh@gmail.com')
INSERT [dbo].[Users] ([ID], [FirstName], [LastName], [UserName]) VALUES (2, N'Jyoti', N'Kushwah', N'jyotiskushwah@gmail.com')
INSERT [dbo].[Users] ([ID], [FirstName], [LastName], [UserName]) VALUES (3, N'Chetna', N'Mathur', N'chetna.mathur11@gmail.com')
SET IDENTITY_INSERT [dbo].[Users] OFF

/****** Object:  Table [dbo].[Logins]    Script Date: 09/17/2018 16:06:41 ******/
SET IDENTITY_INSERT [dbo].[Logins] ON
INSERT [dbo].[Logins] ([ID], [UserName], [PasswordSalt], [PasswordHash], [UsersID]) VALUES (2, N'2kush.dinesh@gmail.com', N'C(YT/vSUG;P\PG{6n\/b''RgY3', 0xC4E3311BF491588256FB0E8D3C83B0214C295FAD, 1)
INSERT [dbo].[Logins] ([ID], [UserName], [PasswordSalt], [PasswordHash], [UsersID]) VALUES (5, N'jyotiskushwah@gmail.com', N'%\i8iAD;A;|Pfi|R59pXY&i$''', 0xA2D23DF8D0F51189E6CE89EAEAF733CBB07493F5, 2)
INSERT [dbo].[Logins] ([ID], [UserName], [PasswordSalt], [PasswordHash], [UsersID]) VALUES (6, N'chetna.mathur11@gmail.com', N'.h%xW_dCr"$5wLCDXS+W,lBN<', 0xFE53FACAB4E7EE49858AD0B269E2398B144CE6A4, 3)
SET IDENTITY_INSERT [dbo].[Logins] OFF

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Comments] WITH CHECK CHECK CONSTRAINT [FK_CommentsAuthors];

ALTER TABLE [dbo].[Comments] WITH CHECK CHECK CONSTRAINT [FK_CommentsPosts];

ALTER TABLE [dbo].[Posts] WITH CHECK CHECK CONSTRAINT [FK_PostsPostTypes];

ALTER TABLE [dbo].[Cities] WITH CHECK CHECK CONSTRAINT [FK_CitiesStates];

ALTER TABLE [dbo].[LikesCounters] WITH CHECK CHECK CONSTRAINT [FK_LikesCountersPosts];

ALTER TABLE [dbo].[States] WITH CHECK CHECK CONSTRAINT [FK_StatesCountries];

ALTER TABLE [dbo].[UserCertifications] WITH CHECK CHECK CONSTRAINT [FK_UsersCertifications];

ALTER TABLE [dbo].[UserCertifications] WITH CHECK CHECK CONSTRAINT [FK_Certifications];

ALTER TABLE [dbo].[UserProfiles] WITH CHECK CHECK CONSTRAINT [FK_UserUsersProfiles];

ALTER TABLE [dbo].[UserQualifications] WITH CHECK CHECK CONSTRAINT [FK_Users];

ALTER TABLE [dbo].[UserQualifications] WITH CHECK CHECK CONSTRAINT [FK_Qualifications];

ALTER TABLE [dbo].[UserQualifications] WITH CHECK CHECK CONSTRAINT [FK_Universities];

ALTER TABLE [dbo].[UsersAddress] WITH CHECK CHECK CONSTRAINT [FK_UsersAddress];

ALTER TABLE [dbo].[ZipCodes] WITH CHECK CHECK CONSTRAINT [FK_ZipCodesCities];


GO
PRINT N'Update complete.';


GO
